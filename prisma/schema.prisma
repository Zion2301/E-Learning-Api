// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum USER_ROLE {
   USER
  ADMIN
  INSTRUCTOR
}

model User {
  id        Int      @id @default(autoincrement())
  email     String 
  password  String
  firstName String?
  lastName  String?
  role    USER_ROLE @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  //Relations
  // courses Course[]
  Enrollment Enrollment[]
}

model Course {
  id Int @default(autoincrement()) @unique
  title String
  description   String?
  price      Float
  duration   Int
  instructorID Int @default(autoincrement()) @unique
  enrollments Enrollment[]
  createdAt   DateTime  @default(now())
  updatedAt DateTime @updatedAt
}

model Enrollment {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userID], references: [id])
  instructorID    Int
  userID  Int @default(autoincrement()) @unique
  course  Course @relation(fields: [courseID], references: [id])
  courseID Int @default(autoincrement()) @unique
  status EnrollmentStatus @default(ACTIVE)
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
  INSTRUCTOR
}

enum EnrollmentStatus {
  ACTIVE
  COMPLETED
  DROPPED
}




